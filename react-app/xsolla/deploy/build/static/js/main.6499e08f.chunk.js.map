{"version":3,"sources":["img/bookmark_active.svg","img/bookmark_disabled.svg","components/EventCardItem.js","img/arrow.svg","components/ItemSelectorItem.js","components/FilterItem.js","components/Favorites.js","App.js","index.js"],"names":["EventCardItem","props","state","id","bookmark","React","createRef","currentImage","bookmark_disabled","bookmarkState","Boolean","Number","window","localStorage","getItem","this","setBookmark","setItem","current","src","bookmark_active","setState","console","log","date","moment","image","name","className","alt","onClick","addBookmark","bind","ref","Component","ItemSelectorItem","title","onClickEvent","FilterItem","filterList","isShowItems","selectedItem","prevProps","length","item","updateFilter","selectorListClassName","showItems","arrow","map","index","selectFilterItem","Favorites","isShowFav","changeFav","App","filterListCity","filterListMonth","musicEvents","filteredMusicEvents","filterParams","city","month","a","fetch","res","json","data","fetchEvents","fetchedEvents","getEvents","processEvents","mounths","cities","locale","push","format","monthsNames","Object","keys","citiesNames","selectedCity","selectedDate","favorites","result","Math","max","filter","filterEvents","getFilteredEvents","updateCityFilter","updateMonthFilter","updateFavFilter","i","genre","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6499e08f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bookmark_active.e1bc097d.svg\";","export default __webpack_public_path__ + \"static/media/bookmark_disabled.405cea49.svg\";","import React, { Component } from \"react\";\r\nimport bookmark_active from \"../img/bookmark_active.svg\";\r\nimport bookmark_disabled from \"../img/bookmark_disabled.svg\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EventCardItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { id: this.props.id };\r\n    this.bookmark = React.createRef();\r\n    this.currentImage = bookmark_disabled;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let bookmarkState = Boolean(\r\n      Number(window.localStorage.getItem(this.state.id))\r\n    );\r\n    this.setBookmark(bookmarkState);\r\n  }\r\n\r\n  setBookmark(state) {\r\n    if (state) {\r\n      window.localStorage.setItem(this.state.id, 1);\r\n      this.bookmark.current.src = bookmark_active;\r\n      this.setState({ currentImage: bookmark_active });\r\n    } else {\r\n      window.localStorage.setItem(this.state.id, 0);\r\n      this.bookmark.current.src = bookmark_disabled;\r\n      this.setState({ currentImage: bookmark_disabled });\r\n    }\r\n  }\r\n\r\n  addBookmark() {\r\n    console.log(window.localStorage.getItem(this.state.id));\r\n    let bookmarkState = !Boolean(\r\n      Number(window.localStorage.getItem(this.state.id))\r\n    );\r\n    this.setBookmark(bookmarkState);\r\n    // console.log(bookmarkState);\r\n  }\r\n\r\n  render() {\r\n    let date = this.props.date;\r\n    date = moment(date, \"DD.MM.YYYY\");\r\n    date = date.date();\r\n\r\n    let image = this.props.image;\r\n    let name = this.props.name;\r\n\r\n    return (\r\n      <div className=\"event-card-item\">\r\n        <div className=\"event-card-item__image\">\r\n          <div className=\"event-card-item__overlay\"></div>\r\n          <img src={image} alt=\"\" />\r\n        </div>\r\n        <span className=\"event-card-item__date\">{date}</span>\r\n        <span className=\"event-card-item__title\">{name}</span>\r\n        <span\r\n          className=\"event-card-item__bookmark\"\r\n          onClick={this.addBookmark.bind(this)}\r\n        >\r\n          <img src={this.currentImage} ref={this.bookmark} alt=\"\" />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEventCardItem.propTypes = {\r\n  city: PropTypes.string,\r\n  date: PropTypes.string,\r\n  genre: PropTypes.string,\r\n  id: PropTypes.string,\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default EventCardItem;\r\n","export default __webpack_public_path__ + \"static/media/arrow.c381148f.svg\";","import React, { Component } from \"react\";\r\n\r\nexport default class ItemSelectorItem extends Component {\r\n  render() {\r\n    const title = this.props.title;\r\n\r\n    return (\r\n      <li\r\n        className=\"item-selector__item\"\r\n        onClick={() => this.props.onClickEvent(title)}\r\n      >\r\n        <div className=\"item-selector__item-text\">{title}</div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport arrow from \"../img/arrow.svg\";\r\nimport ItemSelectorItem from \"./ItemSelectorItem\";\r\n\r\nexport default class FilterItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: this.props.title,\r\n      filterList: this.props.filterList,\r\n      isShowItems: false,\r\n      selectedItem: this.props.filterList[0],\r\n    };\r\n  }\r\n\r\n  showItems() {\r\n    this.setState({ isShowItems: !this.state.isShowItems });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.filterList.length !== this.props.filterList.length) {\r\n      this.setState({\r\n        title: this.props.title,\r\n        filterList: this.props.filterList,\r\n        selectedItem: this.props.filterList[0],\r\n      });\r\n    }\r\n  }\r\n\r\n  selectFilterItem(item) {\r\n    this.setState({\r\n      selectedItem: item,\r\n      isShowItems: false,\r\n    });\r\n\r\n    this.props.updateFilter(item);\r\n    console.log(item, this);\r\n  }\r\n  render() {\r\n    const { title, filterList, selectedItem } = this.state;\r\n\r\n    const selectorListClassName = `item-selector__list ${\r\n      (this.state.isShowItems && \"item-selector__list_active\") || \"\"\r\n    }`;\r\n\r\n    return (\r\n      <div className=\"filter-item\">\r\n        <span className=\"filter-item__title\">{title}:</span>\r\n        <div className=\"item-selector\" onClick={() => this.showItems()}>\r\n          <div className=\"item-selector__title\">{selectedItem}</div>\r\n          <div className=\"item-selector__arrow\">\r\n            <img src={arrow} alt=\"\" />\r\n          </div>\r\n          <ul className={selectorListClassName}>\r\n            {filterList.map((item, index) => (\r\n              <ItemSelectorItem\r\n                key={index}\r\n                title={item}\r\n                onClickEvent={this.selectFilterItem.bind(this)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Favorites extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isShowFav: false,\r\n    };\r\n  }\r\n\r\n  changeFav() {\r\n    let isShowFav = !this.state.isShowFav;\r\n    this.setState({ isShowFav });\r\n\r\n    this.props.updateFilter(isShowFav);\r\n  }\r\n\r\n  render() {\r\n    const className = `favorites__checkbox ${\r\n      (this.state.isShowFav && \"favorites__checkbox_active\") || \"\"\r\n    }`;\r\n    return (\r\n      <div className=\"favorites\">\r\n        <div className=\"favorites__title\">Favorites:</div>\r\n        <div className={className} onClick={this.changeFav.bind(this)}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport EventCardItem from \"./components/EventCardItem\";\nimport FilterItem from \"./components/FilterItem\";\nimport moment from \"moment\";\nimport Favorites from \"./components/Favorites\";\nimport \"./index.sass\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      filterListCity: [\"All\"],\n      filterListMonth: [\"All\"],\n      musicEvents: [],\n      filteredMusicEvents: [],\n      filterParams: { city: \"All\", month: \"All\" },\n    };\n  }\n\n  async fetchEvents() {\n    let res = await fetch(\n      \"https://raw.githubusercontent.com/xsolla/xsolla-frontend-school-2021/main/events.json\"\n    );\n    const data = await res.json();\n    return data;\n  }\n\n  async getEvents() {\n    const fetchedEvents = await this.fetchEvents();\n    this.setState({\n      musicEvents: fetchedEvents,\n      filteredMusicEvents: fetchedEvents,\n    });\n  }\n\n  async componentDidMount() {\n    await this.getEvents();\n    await this.processEvents();\n  }\n\n  async processEvents() {\n    let mounths = {};\n    let cities = {};\n    moment.locale(\"en\");\n    for (const item of this.state.musicEvents) {\n      if (cities[`${item.city}`]) cities[`${item.city}`].push(item.id);\n      else cities[`${item.city}`] = [item.id];\n\n      let date = moment(item.date, \"DD.MM.YYYY\").format(\"MMMM\");\n      if (mounths[`${date}`]) mounths[`${date}`].push(item.id);\n      else mounths[`${date}`] = [item.id];\n    }\n\n    let monthsNames = Object.keys(mounths);\n    let citiesNames = Object.keys(cities);\n\n    this.setState({\n      filterListCity: [\"All\", ...citiesNames],\n      filterListMonth: [\"All\", ...monthsNames],\n    });\n  }\n\n  // first filter state\n  updateCityFilter(selectedCity) {\n    let filterParams = this.state.filterParams;\n    this.setState({ filterParams: { ...filterParams, city: selectedCity } });\n  }\n  // second filter state\n  updateMonthFilter(selectedDate) {\n    let filterParams = this.state.filterParams;\n    this.setState({ filterParams: { ...filterParams, month: selectedDate } });\n  }\n  // 3 filter state\n  updateFavFilter(state) {\n    let filterParams = this.state.filterParams;\n    this.setState({ filterParams: { ...filterParams, favorites: state } });\n  }\n\n  filterEvents(item) {\n    moment.locale(\"en\");\n    let result = 1;\n    let filterParams = this.state.filterParams;\n\n    result &= Math.max(\n      item.city === filterParams.city,\n      filterParams.city === \"All\"\n    );\n\n    let date = moment(item.date, \"DD.MM.YYYY\").format(\"MMMM\");\n    result &= Math.max(\n      date === filterParams.month,\n      filterParams.month === \"All\"\n    );\n\n    if (filterParams.favorites)\n      result &= Boolean(Number(window.localStorage.getItem(item.id)));\n\n    return Boolean(result);\n  }\n\n  getFilteredEvents() {\n    let res = this.state.musicEvents.filter((item) => this.filterEvents(item));\n    return res;\n  }\n\n  render() {\n    const filterListCity = this.state.filterListCity;\n    const filterListMonth = this.state.filterListMonth;\n    const filteredMusicEvents = this.getFilteredEvents();\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"header\">\n            <h1 className=\"header__title\">Event Listing</h1>\n          </div>\n          <div className=\"filter-list\">\n            <FilterItem\n              title=\"City\"\n              filterList={filterListCity}\n              updateFilter={this.updateCityFilter.bind(this)}\n            />\n            <FilterItem\n              title=\"Month\"\n              filterList={filterListMonth}\n              updateFilter={this.updateMonthFilter.bind(this)}\n            />\n            <Favorites updateFilter={this.updateFavFilter.bind(this)} />\n          </div>\n\n          <div className=\"event-card-list\">\n            {filteredMusicEvents.map((item, i) => (\n              <EventCardItem\n                key={item.id}\n                city={item.city}\n                date={item.date}\n                genre={item.genre}\n                id={item.id}\n                image={item.image}\n                name={item.name}\n              />\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}